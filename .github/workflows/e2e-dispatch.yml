name: Run Single E2E
on:
  workflow_dispatch:
    inputs:
      distro:
        description: 'Distro to run test'
        required: true
        default: "ubuntu"
      test-name:
        description: 'Name of test to run'
        required: true
      cluster-wide:
        description: 'Whether or not the test is cluster wide'
        required: true
        default: "false"

jobs:
  setup:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - pipeline-argument: operator-ubi
          - pipeline-argument: version-post-start-hook-init
          - pipeline-argument: readiness-probe-init
          - pipeline-argument: agent-ubi
          - pipeline-argument: agent-ubuntu
          - pipeline-argument: e2e
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ hashFiles('requirements.txt') }}

      - name: Install Python Dependencies
        run: pip install -r requirements.txt

      - name: Login to Quay.io
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_ROBOT_TOKEN }}

      - name: Build and Push Images
        run: python pipeline.py --image-name ${{ matrix.pipeline-argument }} --release false
        env:
          MONGODB_COMMUNITY_CONFIG: "${{ github.workspace }}/scripts/ci/config.json"
          version_id: "${{ github.run_id }}"

  tests:
    runs-on: ubuntu-latest
    needs: [setup]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Cache Dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ hashFiles('requirements.txt') }}

      - name: Install Python Dependencies
        run: pip install -r requirements.txt

      - name: Setup Kind Cluster
        if: steps.last_run_status.outputs.last_run_status != 'success'
        uses: engineerd/setup-kind@v0.5.0
        with:
          version: "v0.8.1"

      - name: Install CRD
        if: steps.last_run_status.outputs.last_run_status != 'success'
        run: kubectl apply -f config/crd/bases/mongodbcommunity.mongodb.com_mongodbcommunity.yaml

      - name: Run Test
        if: steps.last_run_status.outputs.last_run_status != 'success'
        run: python3 ./scripts/dev/e2e.py --test ${{ github.event.inputs.test-name }} --tag ${{ github.run_id }} --config_file ./scripts/ci/config.json --distro ${{ github.event.inputs.distro }} --cluster-wide ${github.event.inputs.cluster-wide}

      - name: Dump Diagnostics
        id: dump_diagnostics
        if: always()
        continue-on-error: true
        run: scripts/ci/dump_diagnostics.sh default # default since kind is running in the default namespace

      - name: Upload Diagnostics
        if: always() && steps.dump_diagnostics.outcome == 'success'
        uses: actions/upload-artifact@v2
        continue-on-error: true
        with:
          name: "${{ github.event.inputs.test-name }}-${{ github.event.inputs.distro }}-diagnostics"
          path: "${{ github.workspace }}/diagnostics"
