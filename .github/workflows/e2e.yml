name: Run E2E
on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
jobs:
  setup:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - pipeline-argument: operator-ubi
          - pipeline-argument: version-post-start-hook-init
          - pipeline-argument: readiness-probe-init
          - pipeline-argument: agent-ubi
          - pipeline-argument: agent-ubuntu
          - pipeline-argument: e2e
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ hashFiles('requirements.txt') }}

      - name: Install Python Dependencies
        run: pip install -r requirements.txt

      - name: Login to Quay.io
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_ROBOT_TOKEN }}

      - name: Build and Push Images
        run: python pipeline.py --image-name ${{ matrix.pipeline-argument }} --release false
        env:
          MONGODB_COMMUNITY_CONFIG: "${{ github.workspace }}/scripts/ci/config.json"
          version_id: "${{ github.run_id }}"

  tests:
    runs-on: ubuntu-latest
    needs: [setup]
    strategy:
      fail-fast: false
      matrix:
        include:
          - test-name: replica_set
            distro: ubuntu
          - test-name: replica_set_recovery
            distro: ubuntu
          - test-name: replica_set_recovery
            distro: ubuntu
          - test-name: replica_set_mongod_readiness
            distro: ubuntu
          - test-name: replica_set_scale
            distro: ubuntu
          - test-name: replica_set_scale_down
            distro: ubuntu
          - test-name: replica_set_change_version
            distro: ubuntu
          - test-name: feature_compatibility_version
            distro: ubuntu
          - test-name: feature_compatibility_version_upgrade
            distro: ubuntu
          - test-name: replica_set_tls
            distro: ubuntu
          - test-name: replica_set_tls_upgrade
            distro: ubuntu
          - test-name: statefulset_arbitrary_config
            distro: ubuntu
          - test-name: statefulset_arbitrary_config_update
            distro: ubuntu
          - test-name: replica_set_mongod_config
            distro: ubuntu
          - test-name: replica_set_cross_namespace_deploy
            distro: ubuntu
            cluster-wide: true
          - test-name: replica_set_custom_role
            distro: ubuntu

          - test-name: replica_set
            distro: ubi
          - test-name: replica_set_recovery
            distro: ubi
          - test-name: replica_set_recovery
            distro: ubi
          - test-name: replica_set_mongod_readiness
            distro: ubi
          - test-name: replica_set_scale
            distro: ubi
          - test-name: replica_set_scale_down
            distro: ubi
          - test-name: replica_set_change_version
            distro: ubi
          - test-name: feature_compatibility_version
            distro: ubi
          - test-name: feature_compatibility_version_upgrade
            distro: ubi
          - test-name: replica_set_tls
            distro: ubi
          - test-name: replica_set_tls_upgrade
            distro: ubi
          - test-name: statefulset_arbitrary_config
            distro: ubi
          - test-name: statefulset_arbitrary_config_update
            distro: ubi
          - test-name: replica_set_mongod_config
            distro: ubi
          - test-name: replica_set_cross_namespace_deploy
            distro: ubi
            cluster-wide: true
          - test-name: replica_set_custom_role
            distro: ubi


    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set default run status
        run: echo "::set-output name=last_run_status::pending" > last_run_status

        # Tracking of the state of the previous test run is a workaround to the fact that it is not
        # possible to re-run a single failed job, only re-running the entire workflow is currently possible.
        # This workaround skips jobs if they have already passed.
        # see https://github.com/actions/runner/issues/432
      - name: Restore last run status
        id: last_run
        uses: actions/cache@v2
        with:
          path: last_run_status
          key: ${{ github.run_id }}-${{ matrix.test-name }}-${{ matrix.distro }}

      - name: Set last run status
        id: last_run_status
        run: cat last_run_status

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Cache Dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ hashFiles('requirements.txt') }}

      - name: Install Python Dependencies
        run: pip install -r requirements.txt

      - name: Setup Kind Cluster
        if: steps.last_run_status.outputs.last_run_status != 'success'
        uses: engineerd/setup-kind@v0.5.0
        with:
          version: "v0.8.1"

      - name: Install CRD
        if: steps.last_run_status.outputs.last_run_status != 'success'
        run: kubectl apply -f config/crd/bases/mongodbcommunity.mongodb.com_mongodbcommunity.yaml

      - name: Run Test
        id: e2e_test
        if: steps.last_run_status.outputs.last_run_status != 'success'
        run: |
          cluster_wide=${{ matrix.cluster-wide }}
          if [ -z "$cluster_wide" ]; then
            cluster_wide="false"
          fi
          python3 ./scripts/dev/e2e.py --test ${{ matrix.test-name }} --tag ${{ github.run_id }} --config_file ./scripts/ci/config.json --distro ${{ matrix.distro }} --cluster-wide ${cluster_wide}

      - name: Save run status
        if: always()
        run: echo "::set-output name=last_run_status::${{ steps.e2e_test.outcome }}" > last_run_status

      - name: Dump Diagnostics
        id: dump_diagnostics
        if: always() && steps.e2e_test.outcome == 'failure'
        continue-on-error: true
        run: scripts/ci/dump_diagnostics.sh default # default since kind is running in the default namespace

      - name: Upload Diagnostics
        if: always() && steps.dump_diagnostics.outcome == 'success'
        uses: actions/upload-artifact@v2
        continue-on-error: true
        with:
          name: "${{ matrix.test-name }}-${{ matrix.distro }}-diagnostics"
          path: "${{ github.workspace }}/diagnostics"
