vars:
  registry: <registry>
  s3_bucket_http: https://enterprise-operator-dockerfiles.s3.amazonaws.com/dockerfiles/mongodb-agent
  s3_bucket: s3://enterprise-operator-dockerfiles/dockerfiles/mongodb-agent

images:
  - name: agent-ubuntu
    vars:
      context: .
      template_context: scripts/dev/templates/agent

    inputs:
      - agent_version
      - tools_version

    stages:
      - name: agent-ubuntu-context
        task_type: docker_build
        dockerfile: scripts/dev/templates/agent/Dockerfile.builder
        tags: ["ubuntu"]
        buildargs:
          agent_version: $(inputs.params.agent_version)
          tools_version: $(inputs.params.tools_version)
          agent_distro: linux_x86_64
          tools_distro: ubuntu1604-x86_64

        labels:
          quay.expires-after: 48h

        output:
          - registry: $(inputs.params.registry)/mongodb-agent-dev
            tag: $(inputs.params.version_id)-context

      - name: agent-template-ubuntu
        task_type: dockerfile_template
        tags: ["ubuntu"]
        distro: ubuntu

        output:
          - dockerfile: scripts/dev/templates/agent/Dockerfile.ubuntu-$(inputs.params.version_id)

      - name: agent-ubuntu-build
        task_type: docker_build
        tags: ["ubuntu"]

        dockerfile: scripts/dev/templates/agent/Dockerfile.ubuntu-$(inputs.params.version_id)

        buildargs:
          imagebase: $(inputs.params.registry)/mongodb-agent-dev:$(inputs.params.version_id)-context

        labels:
          quay.expires-after: 48h

        output:
          - registry: $(inputs.params.registry)/mongodb-agent-dev
            tag: $(inputs.params.version_id)

      - name: agent-template-ubuntu-s3
        task_type: dockerfile_template
        tags: ["ubuntu", "release"]
        distro: ubuntu

        inputs:
          - release_version

        output:
          - dockerfile: $(inputs.params.s3_bucket)/Dockerfile.ubuntu-$(inputs.params.release_version)

      - name: agent-context-ubuntu-release
        task_type: tag_image
        tags: ["ubuntu", "release"]
        distro: ubuntu

        source:
          registry: $(inputs.params.registry)/mongodb-agent-dev
          tag: $(inputs.params.version_id)-context

        destination:
          - registry: $(inputs.params.registry)/mongodb-agent
            tag: $(inputs.params.release_version)-context

      - name: agent-ubuntu-release
        task_type: tag_image
        tags: ["ubuntu", "release"]
        distro: ubuntu

        source:
          registry: $(inputs.params.registry)/mongodb-agent-dev
          tag: $(inputs.params.version_id)

        destination:
          - registry: $(inputs.params.registry)/mongodb-agent
            tag: $(inputs.params.release_version)

  - name: agent-ubi
    vars:
      context: .
      template_context: scripts/dev/templates/agent

    inputs:
      - agent_version
      - tools_version

    stages:
      - name: agent-ubi-context
        task_type: docker_build
        dockerfile: scripts/dev/templates/agent/Dockerfile.builder
        tags: ["ubi"]
        buildargs:
          agent_version: $(inputs.params.agent_version)
          tools_version: $(inputs.params.tools_version)
          agent_distro: rhel7_x86_64
          tools_distro: rhel70-x86_64

        output:
          - registry: $(inputs.params.registry)/mongodb-agent-ubi-dev
            tag: $(inputs.params.version_id)-context


      - name: agent-template-ubi
        task_type: dockerfile_template
        distro: ubi
        tags: ["ubi"]

        output:
          - dockerfile: scripts/dev/templates/agent/Dockerfile.ubi-$(inputs.params.version_id)


      - name: agent-ubi-build
        task_type: docker_build
        tags: ["ubi"]
        dockerfile: scripts/dev/templates/agent/Dockerfile.ubi-$(inputs.params.version_id)

        buildargs:
          imagebase: $(inputs.params.registry)/mongodb-agent-ubi-dev:$(inputs.params.version_id)-context

        labels:
          quay.expires-after: 48h

        output:
          - registry: $(inputs.params.registry)/mongodb-agent-ubi-dev
            tag: $(inputs.params.version_id)

      - name: agent-template-ubi-s3
        task_type: dockerfile_template
        tags: ["ubi", "release"]
        distro: ubi

        inputs:
          - release_version

        output:
          - dockerfile: $(inputs.params.s3_bucket)/Dockerfile.ubi-$(inputs.params.release_version)

      - name: agent-context-ubi-release
        task_type: tag_image
        tags: ["ubi", "release"]
        distro: ubi

        source:
          registry: $(inputs.params.registry)/mongodb-agent-ubi-dev
          tag: $(inputs.params.version_id)-context

        destination:
          - registry: $(inputs.params.registry)/mongodb-agent-ubi
            tag: $(inputs.params.release_version)-context

      - name: agent-ubi-release
        task_type: tag_image
        tags: ["ubi", "release"]
        distro: ubi

        source:
          registry: $(inputs.params.registry)/mongodb-agent-ubi-dev
          tag: $(inputs.params.version_id)

        destination:
          - registry: $(inputs.params.registry)/mongodb-agent-ubi
            tag: $(inputs.params.release_version)


  - name: readiness-probe-init
    vars:
      context: .

    stages:
    - name: readiness-probe-init-build
      task_type: docker_build
      dockerfile: scripts/dev/dockerfiles/Dockerfile.readiness
      tags: ["readiness-probe"]

      labels:
        quay.expires-after: 48h

      output:
        - registry: $(inputs.params.registry)/mongodb-kubernetes-readinessprobe-dev
          tag: $(inputs.params.version_id)

    - name: readiness-probe-init-release
      task_type: tag_image
      tags: ["release", "readiness-probe"]

      inputs:
        - release_version

      source:
        registry: $(inputs.params.registry)/mongodb-kubernetes-readinessprobe-dev
        tag: $(inputs.params.version_id)

      destination:
        - registry: $(inputs.params.registry)/mongodb-kubernetes-readinessprobe
          tag: $(inputs.params.release_version)


  - name: version-post-start-hook-init
    vars:
      context: .

    stages:
      - name: version-post-start-hook-init-build
        task_type: docker_build
        dockerfile: scripts/dev/dockerfiles/Dockerfile.versionhook
        tags: ["post-start-hook"]

        labels:
          quay.expires-after: 48h

        output:
          - registry: $(inputs.params.registry)/mongodb-kubernetes-operator-version-upgrade-post-start-hook-dev
            tag: $(inputs.params.version_id)

      - name: version-post-start-hook-init-build-release
        task_type: tag_image
        tags: ["release", "post-start-hook"]

        inputs:
          - release_version

        source:
          registry: $(inputs.params.registry)/mongodb-kubernetes-operator-version-upgrade-post-start-hook-dev
          tag: $(inputs.params.version_id)

        destination:
          - registry: $(inputs.params.registry)/mongodb-kubernetes-operator-version-upgrade-post-start-hook
            tag: $(inputs.params.release_version)
